[{"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\index.js":"1","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\App.js":"2","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\components\\Login.js":"3","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\actions\\results.js":"4","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\store\\store.js":"5","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\reducers\\userReducer.js":"6","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\components\\PrivateRoute.js":"7","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\components\\Dashboard.js":"8","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\utils\\functions.js":"9","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\utils\\constants.js":"10","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\reducers\\messagesReducer.js":"11","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\reducers\\gifsReducer.js":"12"},{"size":290,"mtime":1611974841054,"results":"13","hashOfConfig":"14"},{"size":859,"mtime":1612188906399,"results":"15","hashOfConfig":"14"},{"size":4241,"mtime":1612155246002,"results":"16","hashOfConfig":"14"},{"size":2683,"mtime":1612200948211,"results":"17","hashOfConfig":"14"},{"size":564,"mtime":1612154279836,"results":"18","hashOfConfig":"14"},{"size":355,"mtime":1612125553768,"results":"19","hashOfConfig":"14"},{"size":279,"mtime":1612190380677,"results":"20","hashOfConfig":"14"},{"size":5928,"mtime":1612187259868,"results":"21","hashOfConfig":"14"},{"size":641,"mtime":1612047602197,"results":"22","hashOfConfig":"14"},{"size":154,"mtime":1612152486401,"results":"23","hashOfConfig":"14"},{"size":304,"mtime":1612155243107,"results":"24","hashOfConfig":"14"},{"size":276,"mtime":1612155244485,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"lbbmr2",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\index.js",[],["55","56"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\App.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\components\\Login.js",["57","58"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\actions\\results.js",["59","60"],"import axios from 'axios'\r\nimport { SET_USER, SET_MESSAGES, SET_GIFS } from '../utils/constants'\r\nimport { getDate, getHour } from '../utils/functions'\r\n\r\nexport const setUser = (user) => ({\r\n  type: SET_USER,\r\n  user,\r\n})\r\nexport const setMessages = (messages) => ({\r\n  type: SET_MESSAGES,\r\n  messages,\r\n})\r\nexport const setGifs = (gifs) => ({\r\n  type: SET_GIFS,\r\n  gifs,\r\n})\r\n\r\nexport const createUser = (email, password, nickName, history) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const { data } = await axios({\r\n        method: 'POST',\r\n        baseURL: process.env.REACT_APP_SERVER_URL,\r\n        url: 'user/signup',\r\n        data: {\r\n          email,\r\n          password,\r\n          nickName,\r\n        },\r\n      })\r\n      localStorage.setItem('token', data.token)\r\n      dispatch(setUser(data))\r\n      history.push('/dashboard')\r\n    } catch (err) {}\r\n  }\r\n}\r\n\r\nexport const loginUser = (email, password, history) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const { data } = await axios({\r\n        method: 'POST',\r\n        baseURL: process.env.REACT_APP_SERVER_URL,\r\n        url: 'user/signin',\r\n        data: {\r\n          email,\r\n          password,\r\n        },\r\n      })\r\n      localStorage.setItem('token', data.token)\r\n      dispatch(setUser(data))\r\n      history.push('/dashboard')\r\n    } catch (err) {}\r\n  }\r\n}\r\n\r\nexport const sendMessage = (nickName, body, img) => {\r\n  return async (dispatch) => {\r\n    const token = localStorage.getItem('token')\r\n    try {\r\n      const { data } = await axios({\r\n        method: 'POST',\r\n        baseURL: process.env.REACT_APP_SERVER_URL,\r\n        url: 'msg/create',\r\n        data: {\r\n          nickName,\r\n          body,\r\n          img,\r\n          date: getDate() + ' / ' + getHour(),\r\n        },\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n    } catch (err) {\r\n      console.error('error', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport const getMessages = () => {\r\n  const token = localStorage.getItem('token')\r\n  return async (dispatch) => {\r\n    const data = await axios({\r\n      method: 'GET',\r\n      baseURL: process.env.REACT_APP_SERVER_URL,\r\n      url: `/msg/get`,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((data) => {\r\n        dispatch(setMessages(data.data.messages))\r\n      })\r\n\r\n      .catch((err) => {})\r\n  }\r\n}\r\nexport const toSearch = (search) => {\r\n  return async (dispatch) => {\r\n    const data = await axios({\r\n      method: 'GET',\r\n      baseURL: `https://api.giphy.com/v1/gifs/search?api_key=${process.env.REACT_APP_API_KEY}&limit=20&offset=0&q=${search}`,\r\n    })\r\n    dispatch(setGifs(data.data.data))\r\n  }\r\n}\r\n","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\store\\store.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\reducers\\userReducer.js",[],["61","62"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\components\\PrivateRoute.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\components\\Dashboard.js",["63","64","65","66","67","68"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { sendMessage, getMessages, toSearch } from '../actions/results'\r\nimport io from 'socket.io-client'\r\nimport { getHour } from '../utils/functions'\r\nimport styled from 'styled-components'\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #ffcf67;\r\n  color: grey;\r\n  border-radius: 20px;\r\n  margin-bottom: 2%;\r\n`\r\nconst Button = styled.button`\r\n  background-color: #ffcf67;\r\n  border: none;\r\n  color: grey;\r\n  border-radius: 20px;\r\n  margin-left: 2%;\r\n  margin-right: 2%;\r\n`\r\n\r\nconst Dashboard = ({ history }) => {\r\n  const chatContainer = React.createRef()\r\n  const dispatch = useDispatch()\r\n  const [body, setBody] = useState('')\r\n  const [search, setSearch] = useState('')\r\n  const [chat, setChat] = useState([])\r\n  const [command, setCommand] = useState(false)\r\n  const [index, setIndex] = useState(0)\r\n  const nickName = useSelector((state) => state.user.nickName)\r\n  const messages = useSelector((state) => state.messages.messages[0])\r\n  const giphy = useSelector((state) => state.gifs.gifs[0])\r\n\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = io(process.env.REACT_APP_SERVER_URL)\r\n    ref.current.on('welcome', (data) => console.log(data))\r\n    ref.current.on('broadcast', (data) => {\r\n      setChat([...chat, data])\r\n    })\r\n    return () => {\r\n      ref.current.close()\r\n    }\r\n  }, [chat])\r\n\r\n  useEffect(() => {\r\n    setIndex(body.indexOf('/giphy'))\r\n    if (index !== -1) {\r\n      setCommand(true)\r\n      setSearch(body.slice(index + 7, body.length))\r\n      if (search.length >= 2) dispatch(toSearch(search))\r\n    } else {\r\n      setCommand(false)\r\n    }\r\n  }, [body])\r\n\r\n  useEffect(() => {\r\n    dispatch(getMessages())\r\n    setCommand(false)\r\n  }, [])\r\n\r\n  const validateInfo = (e) => {\r\n    e.preventDefault()\r\n    if (body === '') return\r\n    send(nickName, body)\r\n  }\r\n\r\n  const send = (nickName, body) => {\r\n    try {\r\n      dispatch(sendMessage(nickName, body))\r\n      const hour = getHour()\r\n      const data = {\r\n        nickName,\r\n        body,\r\n        date: hour,\r\n        img: '',\r\n      }\r\n      ref.current.emit('msg', data)\r\n      setBody('')\r\n      scrollToMyRef()\r\n    } catch (err) {}\r\n  }\r\n\r\n  const sendGif = (e) => {\r\n    const hour = getHour()\r\n    const data = {\r\n      nickName,\r\n      body: '',\r\n      date: hour,\r\n      img: e.target.src,\r\n    }\r\n    ref.current.emit('msg', data)\r\n    try {\r\n      dispatch(sendMessage(nickName, '', e.target.src))\r\n      setSearch('')\r\n    } catch (error) {}\r\n\r\n    setBody(body.slice(0, index))\r\n  }\r\n  const scrollToMyRef = () => {\r\n    const scroll =\r\n      chatContainer.current.scrollHeight - chatContainer.current.clientHeight\r\n    chatContainer.current.scrollTo(0, scroll)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={validateInfo} style={{ width: '90%' }}>\r\n      <div className='container mt-5' style={{ overflowY: 'visible' }}>\r\n        <Header>\r\n          <Button> Usuario: {nickName}</Button>\r\n          <Button\r\n            type='button'\r\n            onClick={() => {\r\n              localStorage.removeItem('token')\r\n              history.push('/login')\r\n            }}\r\n          >\r\n            Salir\r\n          </Button>\r\n        </Header>\r\n        <div\r\n          class='jumbotron'\r\n          style={{ height: '60vh', opacity: '0.9', padding: '0' }}\r\n        >\r\n          <div\r\n            ref={chatContainer}\r\n            style={{\r\n              overflowY: 'scroll',\r\n              height: '100%',\r\n              borderBottomLeftRadius: '0px',\r\n              borderBottomRightRadius: '0px',\r\n            }}\r\n          >\r\n            {command\r\n              ? !!giphy &&\r\n                giphy.length > 0 &&\r\n                giphy.map((gif, indx) => {\r\n                  return (\r\n                    <div className='item' key={indx}>\r\n                      <img\r\n                        src={gif.images.downsized.url}\r\n                        onClick={(e) => sendGif(e)}\r\n                      />\r\n                    </div>\r\n                  )\r\n                })\r\n              : !!messages &&\r\n                messages.length > 0 &&\r\n                messages.map((msg, indx) => {\r\n                  return (\r\n                    <p class='lead' style={{ margin: '0' }} key={msg._id}>\r\n                      <span style={{ fontSize: '0.6rem', color: 'orange' }}>\r\n                        {msg.date}\r\n                      </span>\r\n                      {`<${msg.nickName}> ${msg.body}`}\r\n                      <img src={msg.img} />\r\n                    </p>\r\n                  )\r\n                })}\r\n            {!!chat &&\r\n              chat.length > 0 &&\r\n              chat.map((msg, indx) => {\r\n                return (\r\n                  <p class='lead' style={{ margin: '0' }} key={indx}>\r\n                    <span style={{ fontSize: '0.6rem', color: 'orange' }}>\r\n                      {msg.date}\r\n                    </span>\r\n                    {`<${msg.nickName}> ${msg.body}`}\r\n                    <img src={msg.img} />\r\n                  </p>\r\n                )\r\n              })}\r\n          </div>\r\n          <input\r\n            type='text'\r\n            placeholder='Escribe un mensaje'\r\n            className='form-control mt-1'\r\n            style={{ width: '100%', border: 'none' }}\r\n            onChange={(e) => setBody(e.target.value)}\r\n            value={body}\r\n          />\r\n        </div>\r\n        <p class='row justify-content-end'>\r\n          <button\r\n            type='submit'\r\n            class='btn btn-primary btn-lg'\r\n            style={{ marginRight: '2%', marginTop: '4%' }}\r\n            href='#'\r\n            role='button'\r\n          >\r\n            Enviar\r\n          </button>\r\n        </p>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default withRouter(Dashboard)\r\n","C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\utils\\functions.js",[],["69","70"],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\utils\\constants.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\reducers\\messagesReducer.js",[],"C:\\Users\\DANIEL\\Documents\\MakeItReal\\Programa TOP\\Projects\\irc\\src\\reducers\\gifsReducer.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":38},{"ruleId":"75","severity":1,"message":"79","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":24},{"ruleId":"75","severity":1,"message":"80","line":61,"column":15,"nodeType":"77","messageId":"78","endLine":61,"endColumn":19},{"ruleId":"75","severity":1,"message":"80","line":84,"column":11,"nodeType":"77","messageId":"78","endLine":84,"endColumn":15},{"ruleId":"71","replacedBy":"81"},{"ruleId":"73","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":60,"column":6,"nodeType":"85","endLine":60,"endColumn":12,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":65,"column":6,"nodeType":"85","endLine":65,"endColumn":8,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":145,"column":23,"nodeType":"91","endLine":148,"endColumn":25},{"ruleId":"89","severity":1,"message":"90","line":161,"column":23,"nodeType":"91","endLine":161,"endColumn":44},{"ruleId":"89","severity":1,"message":"90","line":174,"column":21,"nodeType":"91","endLine":174,"endColumn":42},{"ruleId":"92","severity":1,"message":"93","line":189,"column":11,"nodeType":"91","endLine":195,"endColumn":12},{"ruleId":"71","replacedBy":"94"},{"ruleId":"73","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'validateFields' is defined but never used.","'data' is assigned a value but never used.",["96"],["97"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'index', and 'search'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSearch' needs the current value of 'index'.","ArrayExpression",["98"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["99"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.",["96"],["97"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [body, dispatch, index, search]",{"range":"104","text":"105"},"Update the dependencies array to be: [dispatch]",{"range":"106","text":"107"},[1813,1819],"[body, dispatch, index, search]",[1902,1904],"[dispatch]"]